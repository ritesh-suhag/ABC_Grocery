colnames(Map_Coordinates)[1] <- "AIRPORT"
# Creating variables for calculating the distances -
distance_actual_2 <- c(rep(0, nrow(temp2)))
# Adding all the distances for Trip 1 -
for(i in c(1:(length(colnames_temp)-1))) {
distance_actual_2_temp <- distHaversine(as.matrix(temp2[, c(paste(colnames_temp[i],"_LONGITUDE"), paste(colnames_temp[i],"_LATITUDE"))]),
as.matrix(temp2[, c(paste(colnames_temp[i+1],"_LONGITUDE"), paste(colnames_temp[i+1],"_LATITUDE"))]),
r = 6378137)
# Replacing NAs in temp to be 0 -
distance_actual_2_temp[is.na(distance_actual_2_temp)] <- 0
distance_actual_2 <- distance_actual_2 + distance_actual_2_temp
}
# Getting rid of all the unwanted columns -
temp2[ , colnames_temp] <- NULL
temp2[ , paste(colnames_temp, "_LONGITUDE")] <- NULL
temp2[ , paste(colnames_temp, "_LATITUDE")] <- NULL
temp2$Trip1_Count <- NULL
temp2$Trip2_Count <- NULL
# Saving the value in the data frame -
temp2$distance_actual_2 <- distance_actual_2
# Saving the sequence back -
colnames(temp2)[colnames(temp2) == "Trip_Info1"] <- "Trip_Info"
temp2 <- temp2[ , c(10, 1:9, 11:14)]
mean(exp(sqrt(1:10)))
(1:10) %>% sqrt() %>% exp() %>% mean()
mean(exp(sqrt(1:10)))
(1:10) %>% sqrt() %>% exp() %>% mean()
set.seed(2020)
random_normal_numbers <- rnorm(n = 1000, mean = 3, sd = 1)
set.seed(2020)
random_normal_numbers <- rnorm(n = 1000, mean = 3, sd = 1)
dollars_converted <- function(value, cpi_a, cpi_b){
output = value * cpi_b / cpi_a
return(output)
}
dollars_converted <- function(value, cpi_a, cpi_b){
output = value * cpi_b / cpi_a
return(output)
}
dollars_2018 = dollars_converted(value = 7.4, cpi_a = 201.6, cpi_b = 251.1)
dollars_2018
dollars_2018 = dollars_converted(value = 7.4, cpi_a = 201.6, cpi_b = 251.1)
dollars_2018
mean(random_normal_numbers[30], random_normal_numbers[300])
```{r}
present_value <- function(r = dollars_converted(7.4, 201.6, 251.1) , d, t) {
# Calculating the denominator
denominator = (1 + d)^t
# Calculating the output
output = r / denominator
# Returning the output
return(output)
}
present_value(d = 0.05, t = 5)
present_value(d = 0.05, t = 50)
present_value(d = 0.1, t = 5)
time <- c(1:50)
pvs <- vector(mode = "double", length = length(time))
for (i in seq_along(time)) {
pvs[i] <- present_value(d = 0.05, t = time[i])
}
?tibble
present_value_simulator <- function(r = dollars_converted(7.4, 201.6, 251.1) , d, t_start, t_end){
time = c(t_start, t_end)
pvs <- vector(mode = "double", length = length(time))
for (i in seq_along(time)) {
pvs[i] <- present_value(d = 0.05, t = time[i])
}
output = data.frame(time = time,
pvs = pvs)
return(output)
}
present_value_simulator(d = 0.1, t_start = 0, t_end = 30)
present_value_simulator <- function(r = dollars_converted(7.4, 201.6, 251.1) , d, t_start, t_end){
time = c(t_start:t_end)
pvs <- vector(mode = "double", length = length(time))
for (i in seq_along(time)) {
pvs[i] <- present_value(d = 0.05, t = time[i])
}
output = data.frame(time = time,
pvs = pvs)
return(output)
}
present_value_simulator(d = 0.1, t_start = 0, t_end = 30)
present_value_simulator(d = 0.1, t_start = 0, t_end = 30) %>% ggplot()
x <- present_value_simulator(d = 0.1, t_start = 0, t_end = 30)
x %>% filter(x$time <= 10)
x %>% filter(x$time <= 25 & x$pvs <= 5)
x %>% filter(time <= 25 & pvs <= 5)
?filter
boston_property = read_csv("https://query.data.world/s/pfqt62iufpcricbewykr3q6nrnpj6n")
View(boston_property)
table(boston_property$R_TOTAL_RMS)
View(boston_property)
boston_property$AV_TOTAL
?sample
length(boston_property)
dim(boston_property)
dim(boston_property)[1]
boston_property_sample = boston_property %>% filter(AV_Total != 0 & AV_Land != 0 & LIVING_AREA !=0 &
YR_BUILT != 0) %>%
filter(R_TOTAL_RMS != 0) %>% sample(1:172841, prob = 0.8)
boston_property_sample = boston_property %>% filter(AV_TOTAL != 0 & AV_LAND != 0 & LIVING_AREA !=0 &
YR_BUILT != 0) %>%
filter(R_TOTAL_RMS != 0) %>% sample(1:172841, prob = 0.8)
0.8 * 172841
boston_property_sample = boston_property %>% filter(AV_TOTAL != 0 & AV_LAND != 0 & LIVING_AREA !=0 &
YR_BUILT != 0) %>%
filter(R_TOTAL_RMS != 0) %>% sample(1:172841, size = 0.8*172841)
?sample
boston_property_sample = boston_property %>% filter(AV_TOTAL != 0 & AV_LAND != 0 & LIVING_AREA !=0 &
YR_BUILT != 0) %>%
filter(R_TOTAL_RMS != 0) %>% sample(x=1:172841, size = 0.8*172841)
boston_property_sample = boston_property %>% filter(AV_TOTAL != 0 & AV_LAND != 0 & LIVING_AREA !=0 &
YR_BUILT != 0) %>%
filter(R_TOTAL_RMS != 0) %>% sample(x=1:172841, size = 12)
boston_property_sample = boston_property %>% filter(AV_TOTAL != 0 & AV_LAND != 0 & LIVING_AREA !=0 &
YR_BUILT != 0) %>%
filter(R_TOTAL_RMS != 0) %>% sample_n(x=1:172841, size = 12)
boston_property_sample = boston_property %>% filter(AV_TOTAL != 0 & AV_LAND != 0 & LIVING_AREA !=0 &
YR_BUILT != 0) %>%
filter(R_TOTAL_RMS != 0) %>% sample_n(x=1:172841, size = 0.8*172841)
boston_property_sample = boston_property %>% filter(AV_TOTAL != 0 & AV_LAND != 0 & LIVING_AREA !=0 &
YR_BUILT != 0) %>%
filter(R_TOTAL_RMS != 0) %>% sample_n(x=1:172841, size = 138272)
boston_property_sample = boston_property %>% filter(AV_TOTAL != 0 & AV_LAND != 0 & LIVING_AREA !=0 &
YR_BUILT != 0) %>%
filter(R_TOTAL_RMS != 0) %>% sample_n(size = 138272)
boston_property = read_csv("https://query.data.world/s/pfqt62iufpcricbewykr3q6nrnpj6n")
boston_property_sample = boston_property %>% filter(AV_TOTAL != 0 & AV_LAND != 0 & LIVING_AREA !=0 &
YR_BUILT != 0) %>%
filter(R_TOTAL_RMS != 0) %>% sample_n(size = 138272)
boston_property_sample = boston_property %>% filter(AV_TOTAL != 0 & AV_LAND != 0 & LIVING_AREA !=0 &
YR_BUILT != 0) %>%
filter(R_TOTAL_RMS != 0)
boston_property_sample = boston_property %>% filter(AV_TOTAL != 0 & AV_LAND != 0 & LIVING_AREA !=0 &
YR_BUILT != 0) %>%
filter(R_TOTAL_RMS != 0)
boston_property_sample = boston_property_sample[sample(1:172841, size = 0.8*172841), ]
boston_property_sample = boston_property %>% filter(AV_TOTAL != 0 & AV_LAND != 0 & LIVING_AREA !=0 &
YR_BUILT != 0) %>%
filter(R_TOTAL_RMS != 0)
boston_property_sample = boston_property_sample[sample(1:172841, size = 0.8*172841), ]
library(ISLR)
library(readxl)
womens_earnings_2016 <- read_excel("Desktop/Trial/womens_earnings_2016.xlsx",
skip = 4)
View(womens_earnings_2016)
# Creating a female data frame for the ages -
female_age_df <- data.frame(Age = character(),
Medial_Salary = double())
# Creating a female data frame for the ages -
female_age_df <- data.frame(Age_Character = womens_earnings_2016$Characteristic[c(4:12)],
Medial_Salary = womens_earnings_2016$Female_Median_Weekly_Earnings[c(4:12)])
View(female_age_df)
female_age_df <- female_age_df[-c(1,4), ]
plot(female_age_df$Medial_Salary)
# Creating a male data frame for the ages -
male_age_df <- data.frame(Age_Character = womens_earnings_2016$Characteristic[c(4:12)],
Medial_Salary = womens_earnings_2016$Male_Median_Weekly_Earnings[c(4:12)])
male_age_df <- male_age_df[-c(1,4), ]
plot(male_age_df$Medial_Salary)
plot(female_age_df$Medial_Salary, female_age_df$Age_Character)
plot(female_age_df$Age_Character, female_age_df$Medial_Salary)
plot(female_age_df$Medial_Salary)
# Setting a numeric variable to do linear regression -
female_age_df$Age_Numeric <- c(1:nrow(female_age_df))
# Creating a female data frame for the ages -
female_age_df <- data.frame(Age_Character = womens_earnings_2016$Characteristic[c(4:12)],
Median_Salary = womens_earnings_2016$Female_Median_Weekly_Earnings[c(4:12)])
female_age_df <- female_age_df[-c(1,4), ]
plot(female_age_df$Median_Salary)
# Creating a male data frame for the ages -
male_age_df <- data.frame(Age_Character = womens_earnings_2016$Characteristic[c(4:12)],
Median_Salary = womens_earnings_2016$Male_Median_Weekly_Earnings[c(4:12)])
male_age_df <- male_age_df[-c(1,4), ]
plot(male_age_df$Median_Salary)
# Setting a numeric variable to do linear regression -
female_age_df$Age_Numeric <- c(1:nrow(female_age_df))
male_age_df$Age_Numeric <- c(1:nrow(male_age_df))
female_model <- lm(Median_Salary ~ Age_Numeric, data = female_age_df)
summary(female_model)
male_model <- lm(Median_Salary ~ Age_Numeric, data = male_age_df)
summary(male_model)
plot(female_age_df$Age_Numeric ~ female_age_df$Median_Salary, pch = 20,
xlab = "Age Index", ylab = "Median Salary")
abline(coef = ccoef(female_model), col = "darkred", lwd = 3)
plot(female_age_df$Median_Salary ~ female_age_df$Age_Numeric, pch = 20,
xlab = "Age Index", ylab = "Median Salary")
abline(coef = ccoef(female_model), col = "darkred", lwd = 3)
abline(coef = coef(female_model), col = "darkred", lwd = 3)
abline(coef = coef(male_model), col = "darkred", lwd = 3)
plot(pch = 20,
xlab = "Age Index", ylab = "Median Salary")
abline(coef = coef(female_model), col = "darkred", lwd = 3)
abline(coef = coef(male_model), col = "darkred", lwd = 3)
plot(female_age_df$Median_Salary ~ female_age_df$Age_Numeric, pch = 20,
xlab = "Age Index", ylab = "Median Salary")
plot(female_age_df$Median_Salary ~ female_age_df$Age_Numeric, pch = 20,
col = "blue"
xlab = "Age Index", ylab = "Median Salary")
abline(coef = coef(female_model), col = "blue", lwd = 3)
points(male_age_df$Median_Salary ~ male_age_df$Age_Numeric, pch = 20,
col = "darkred")
abline(coef = coef(male_model), col = "darkred", lwd = 3)
plot(female_age_df$Median_Salary ~ female_age_df$Age_Numeric, pch = 20,
col = "blue"
xlab = "Age Index", ylab = "Median Salary")
plot(female_age_df$Median_Salary ~ female_age_df$Age_Numeric, pch = 20,
col = "blue",
xlab = "Age Index", ylab = "Median Salary")
abline(coef = coef(female_model), col = "blue", lwd = 3)
points(male_age_df$Median_Salary ~ male_age_df$Age_Numeric, pch = 20,
col = "darkred")
abline(coef = coef(male_model), col = "darkred", lwd = 3)
plot(female_age_df$Median_Salary ~ female_age_df$Age_Numeric, pch = 20,
col = "blue",
xlab = "Age Index", ylab = "Median Salary",
ylim = c(1:1200))
plot(female_age_df$Median_Salary ~ female_age_df$Age_Numeric, pch = 20,
col = "blue",
xlab = "Age Index", ylab = "Median Salary",
ylim = 1000)
plot(female_age_df$Median_Salary ~ female_age_df$Age_Numeric, pch = 20,
col = "blue",
xlab = "Age Index", ylab = "Median Salary",
ylim = c(0, 1200))
abline(coef = coef(female_model), col = "blue", lwd = 3)
points(male_age_df$Median_Salary ~ male_age_df$Age_Numeric, pch = 20,
col = "darkred")
abline(coef = coef(male_model), col = "darkred", lwd = 3)
View(womens_earnings_2016)
plot(female_age_df$Median_Salary ~ female_age_df$Age_Numeric, pch = 20,
col = "red",
xlab = "Age Index", ylab = "Median Salary",
ylim = c(0, 1200))
abline(coef = coef(female_model), col = "red", lwd = 3)
points(male_age_df$Median_Salary ~ male_age_df$Age_Numeric, pch = 20,
col = "blue")
abline(coef = coef(male_model), col = "blue", lwd = 3)
plot(female_age_df$Median_Salary ~ female_age_df$Age_Numeric, pch = 20,
col = "pink",
xlab = "Age Index", ylab = "Median Salary",
ylim = c(0, 1200))
abline(coef = coef(female_model), col = "pink", lwd = 3)
points(male_age_df$Median_Salary ~ male_age_df$Age_Numeric, pch = 20,
col = "blue")
abline(coef = coef(male_model), col = "blue", lwd = 3)
# This plot gives the overview of the same.
plot(female_age_df$Median_Salary ~ female_age_df$Age_Numeric, pch = 20,
col = "pink",
xlab = "Age Index", ylab = "Median Salary",
ylim = c(400, 1200))
abline(coef = coef(female_model), col = "pink", lwd = 3)
points(male_age_df$Median_Salary ~ male_age_df$Age_Numeric, pch = 20,
col = "blue")
abline(coef = coef(male_model), col = "blue", lwd = 3)
remove(female_age_df, male_age_df, female_model, male_model)
female_age_df <- data.frame(Age_Character = womens_earnings_2016$Characteristic[c(4:12)],
Median_Salary = womens_earnings_2016$Female_Median_Weekly_Earnings[c(4:12)])
View(female_age_df)
female_age_df <- female_age_df[-c(1,4), ]
plot(female_age_df$Median_Salary)
# Creating a male data frame for the ages -
male_age_df <- data.frame(Age_Character = womens_earnings_2016$Characteristic[c(4:12)],
Median_Salary = womens_earnings_2016$Male_Median_Weekly_Earnings[c(4:12)])
male_age_df <- male_age_df[-c(1,4), ]
plot(male_age_df$Median_Salary)
# Setting a numeric variable to do linear regression -
female_age_df$Age_Numeric <- c(1:nrow(female_age_df))
male_age_df$Age_Numeric <- c(1:nrow(male_age_df))
View(female_age_df)
# Make a linear Model to see variation in salary according to age in females.
female_model <- lm(Median_Salary ~ Age_Numeric, data = female_age_df)
summary(female_model)
# Make a linear Model to see variation in salary according to age in males.
male_model <- lm(Median_Salary ~ Age_Numeric, data = male_age_df)
summary(male_model)
# This plot gives the overview of the same.
plot(female_age_df$Median_Salary ~ female_age_df$Age_Numeric, pch = 20,
col = "pink",
xlab = "Age Index", ylab = "Median Salary",
ylim = c(400, 1200))
abline(coef = coef(female_model), col = "pink", lwd = 3)
points(male_age_df$Median_Salary ~ male_age_df$Age_Numeric, pch = 20,
col = "blue")
abline(coef = coef(male_model), col = "blue", lwd = 3)
library(readxl)
womens_earnings_2016 <- read_excel("Desktop/Trial/womens_earnings_2016.xlsx",
skip = 4)
View(womens_earnings_2016)
# Creating a female data frame for the ages -
female_age_df <- data.frame(Age_Character = womens_earnings_2016$Characteristic[c(4:12)],
Median_Salary = womens_earnings_2016$Female_Median_Weekly_Earnings[c(4:12)])
female_age_df <- female_age_df[-c(1,4), ]
plot(female_age_df$Median_Salary)
# Creating a male data frame for the ages -
male_age_df <- data.frame(Age_Character = womens_earnings_2016$Characteristic[c(4:12)],
Median_Salary = womens_earnings_2016$Male_Median_Weekly_Earnings[c(4:12)])
male_age_df <- male_age_df[-c(1,4), ]
plot(male_age_df$Median_Salary)
# Setting a numeric variable to do linear regression -
# female_age_df$Age_Numeric <- c(1:nrow(female_age_df))
female_age_df$Age_Numeric <- c(17.5, 22, 30, 40, 50, 60, 75)
male_age_df$Age_Numeric <- c(17.5, 22, 30, 40, 50, 60, 75)
# Make a linear Model to see variation in salary according to age in females.
female_model <- lm(Median_Salary ~ Age_Numeric, data = female_age_df)
summary(female_model)
# Make a linear Model to see variation in salary according to age in males.
male_model <- lm(Median_Salary ~ Age_Numeric, data = male_age_df)
summary(male_model)
# This plot gives the overview of the same.
plot(female_age_df$Median_Salary ~ female_age_df$Age_Numeric, pch = 20,
col = "pink",
xlab = "Age Index", ylab = "Median Salary",
ylim = c(400, 1200))
abline(coef = coef(female_model), col = "pink", lwd = 3)
points(male_age_df$Median_Salary ~ male_age_df$Age_Numeric, pch = 20,
col = "blue")
abline(coef = coef(male_model), col = "blue", lwd = 3)
reticulate::repl_python()
import numpy as np
no
reticulate::repl_python()
reticulate::repl_python()
library(readr)
Schools <- read_csv("Desktop/Schools.csv")
View(Schools)
Schools <- Schools[, c(5,6,7)]
View(Schools)
Schools <- Schools[!duplicated(Schools), ]
View(Schools)
Schools <- Schools[order(Schools$`School State`), ]
View(Schools)
temp <- Schools[c(10,11), ]
View(temp)
Schools <- Schools[Schools$`School State` != "Alabama", ]
Schools <- Schools[Schools$`School State` != "Alaska", ]
temp <- rbind(temp , Schools[c(1,23), ])
View(temp)
Schools <- Schools[Schools$`School State` != "Arizona", ]
View(Schools)
temp <- rbind(temp , Schools[c(2,49), ])
Schools <- Schools[Schools$`School State` != "Arkansas", ]
temp <- rbind(temp , Schools[c(1, 18, 19), ])
Schools <- Schools[Schools$`School State` != "California", ]
temp <- rbind(temp , Schools[c(36, 42), ])
Schools <- Schools[Schools$`School State` != "Colorado", ]
View(Schools)
temp <- rbind(temp , Schools[c(1, 2), ])
Schools <- Schools[Schools$`School State` != "Connecticut", ]
temp <- rbind(temp , Schools[c(7), ])
Schools <- Schools[Schools$`School State` != "Delaware", ]
temp <- rbind(temp , Schools[c(15), ])
Schools <- Schools[Schools$`School State` != "District of Columbia", ]
temp <- rbind(temp , Schools[c(18, 24), ])
Schools <- Schools[Schools$`School State` != "Florida", ]
View(Schools)
temp <- rbind(temp , Schools[c(3,4), ])
Schools <- Schools[Schools$`School State` != "Georgia", ]
Schools <- Schools[Schools$`School State` != "Hawaii", ]
temp <- rbind(temp , Schools[c(23, 25), ])
Schools <- Schools[Schools$`School State` != "Idaho", ]
temp <- rbind(temp , Schools[c(39, 40), ])
Schools <- Schools[Schools$`School State` != "Illinois", ]
temp <- rbind(temp , Schools[c(22, 23), ])
Schools <- Schools[Schools$`School State` != "Indiana", ]
View(Schools)
temp <- rbind(temp , Schools[c(24, 27), ])
Schools <- Schools[Schools$`School State` != "Iowa", ]
View(Schools)
temp <- rbind(temp , Schools[c(4,5), ])
Schools <- Schools[Schools$`School State` != "Kansas", ]
temp <- rbind(temp , Schools[c(10, 11), ])
Schools <- Schools[Schools$`School State` != "Kentucky", ]
temp <- rbind(temp , Schools[c(4, 5), ])
Schools <- Schools[Schools$`School State` != "Louisiana", ]
View(Schools)
temp <- rbind(temp , Schools[c(14, 15), ])
Schools <- Schools[Schools$`School State` != "Maine", ]
View(Schools)
temp <- rbind(temp , Schools[c(40, 49), ])
Schools <- Schools[Schools$`School State` != "Maryland", ]
View(Schools)
temp <- rbind(temp , Schools[c(281, 300), ])
Schools <- Schools[Schools$`School State` != "Maryland", ]
View(Schools)
Schools <- Schools[Schools$`School State` != "Massachusetts", ]
temp <- rbind(temp , Schools[c(28, 32), ])
Schools <- Schools[Schools$`School State` != "Michigan", ]
View(Schools)
temp <- rbind(temp , Schools[c(15, 19), ])
Schools <- Schools[Schools$`School State` != "Minnesota", ]
View(Schools)
temp <- rbind(temp , Schools[c(1,2), ])
Schools <- Schools[Schools$`School State` != "Mississippi", ]
View(Schools)
temp <- rbind(temp , Schools[c(4, 6), ])
Schools <- Schools[Schools$`School State` != "Missouri", ]
View(Schools)
temp <- rbind(temp , Schools[c(1, 12), ])
Schools <- Schools[Schools$`School State` != "Missouri", ]
Schools <- Schools[Schools$`School State` != "Montana", ]
View(Schools)
temp <- rbind(temp , Schools[c(6, 18), ])
Schools <- Schools[Schools$`School State` != "Nebraska", ]
View(Schools)
temp <- rbind(temp , Schools[c(1), ])
Schools <- Schools[Schools$`School State` != "Nevada", ]
temp <- rbind(temp , Schools[c(14, 22), ])
Schools <- Schools[Schools$`School State` != "New Hampshire", ]
temp <- rbind(temp , Schools[c(18, 20), ])
Schools <- Schools[Schools$`School State` != "New Jersey", ]
View(Schools)
temp <- rbind(temp , Schools[c(1, 9), ])
Schools <- Schools[Schools$`School State` != "New Mexico", ]
View(Schools)
temp <- rbind(temp , Schools[c(2, 12), ])
Schools <- Schools[Schools$`School State` != "New Mexico", ]
Schools <- Schools[Schools$`School State` != "New York", ]
New York
temp <- rbind(temp , Schools[c(12, 16), ])
Schools <- Schools[Schools$`School State` != "North Carolina", ]
temp <- rbind(temp , Schools[c(5, 15), ])
Schools <- Schools[Schools$`School State` != "North Dakota", ]
temp <- rbind(temp , Schools[c(13, 16), ])
Schools <- Schools[Schools$`School State` != "Ohio", ]
View(Schools)
temp <- rbind(temp , Schools[c(5, 8), ])
Schools <- Schools[Schools$`School State` != "Oklahoma", ]
temp <- rbind(temp , Schools[c(18, 23), ])
Schools <- Schools[Schools$`School State` != "Oregon", ]
View(Schools)
temp <- rbind(temp , Schools[c(1, 15), ])
Schools <- Schools[Schools$`School State` != "Pennsylvania", ]
View(Schools)
temp <- rbind(temp , Schools[c(1), ])
Schools <- Schools[Schools$`School State` != "Rhode Island", ]
View(Schools)
temp <- rbind(temp , Schools[c(6, 9), ])
Schools <- Schools[Schools$`School State` != "South Carolina", ]
temp <- rbind(temp , Schools[c(12, 15), ])
Schools <- Schools[Schools$`School State` != "South Dakota", ]
View(Schools)
temp <- rbind(temp , Schools[c(2, 8), ])
Schools <- Schools[Schools$`School State` != "Tennessee", ]
temp <- rbind(temp , Schools[c(9, 26, 29), ])
Schools <- Schools[Schools$`School State` != "Texas", ]
View(Schools)
temp <- rbind(temp , Schools[c(2, 11), ])
Schools <- Schools[Schools$`School State` != "Utah", ]
View(Schools)
temp <- rbind(temp , Schools[c(18, 21), ])
Schools <- Schools[Schools$`School State` != "Vermont", ]
temp <- rbind(temp , Schools[c(2, 19), ])
Schools <- Schools[Schools$`School State` != "Virginia", ]
View(Schools)
temp <- rbind(temp , Schools[c(6, 31), ])
Schools <- Schools[Schools$`School State` != "Washington", ]
View(Schools)
temp <- rbind(temp , Schools[c(3, 8), ])
Schools <- Schools[Schools$`School State` != "West Virginia", ]
View(Schools)
temp <- rbind(temp , Schools[c(3, 42), ])
Schools <- Schools[Schools$`School State` != "Wisconsin", ]
View(Schools)
temp <- rbind(temp , Schools[c(1, 2), ])
Schools <- Schools[Schools$`School State` != "Wyoming", ]
library(readr)
customer_details <- read_csv("Desktop/Projects/Python/GitHub_Ritesh/ABC_Grocery/Data/customer_details.csv")
View(customer_details)
colnames(customer_details)[6] <- "City_Name"
View(Schools)
View(temp)
customer_details[, c("State", "City_Name", "zip_code")] <- temp[, c("School State", "School City", "School Zip")]
temp <- rbind(temp, temp)
colnames(customer_details)[6] <- "City_Name"
temp <- rbind(temp, temp)
temp <- rbind(temp, temp)
View(temp)
10-6
870-768
temp <- rbind(temp, temp[c(1:102), ])
customer_details[, c("State", "City_Name", "zip_code")] <- temp[, c("School State", "School City", "School Zip")]
library(readr)
uszips <- read_csv("Desktop/simplemaps_uszips_basicv1.75/uszips.csv")
View(uszips)
sum(temp$`School Zip` %in% uszips$zip)
View(uszips)
uszips <- uszips[, c(1:6)]
View(uszips)
colnames(temp)[2] <- "zip"
library(dplyr)
temp <- left_join(temp, uszips)
View(temp)
View(temp)
customer_details$City_Name <- NULL
customer_details[, c(5, 6, 7, 8, 9 10)] <- temp[, c(1,2,4,5,6,7)]
customer_details[, c(5, 6, 7, 8, 9 10)] <- temp[, c(1,2,4,5,6,7)]
customer_details[ , c(5, 6, 7, 8, 9 10)] <- temp[ , c(1,2,4,5,6,7)]
colnames(customer_details)
colnames(temp)
customer_details$State ,- temp$`School State`
customer_details$State <- temp$`School State`
customer_details$State <- temp$`School State`
customer_details$zip_code <- temp$zip
customer_details$latitude <- temp$lat
customer_details$longitude <- temp$lng
customer_details$city <- temp$city
customer_details$state <- temp$state_id
setwd("~/Desktop/Projects/Python/GitHub_Ritesh/ABC_Grocery/Data")
write_csv(customer_details, "customer_details.csv")
